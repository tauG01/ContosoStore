@page "/merchants"
@using Volo.Abp.Application.Dtos
@using ContosoStore.Merchants
@using ContosoStore.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp
@using Volo.Abp.AspNetCore.Components.Web
@inherits ContosoStoreComponentBase
@inject IMerchantAppService MerchantAppService
@inject AbpBlazorMessageLocalizerHelper<ContosoStoreResource> LH

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Merchants"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                    
                        <Button Color="Color.Primary"
                                Clicked="OpenCreateMerchantModal">
                            @L["NewCustomer"]
                        </Button>
                    
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="MerchantDto"
                  Data="MerchantList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
              
                <DataGridColumn TItem="MerchantDto"
                                Field="@nameof(MerchantDto.BusinessName)"
                                Caption="@L["Business Name"]">
                </DataGridColumn>

                <DataGridColumn TItem="MerchantDto"
                                Field="@nameof(MerchantDto.Email)"
                                Caption="@L["Email"]">
                </DataGridColumn>

                <DataGridColumn Width="150px"
                                TItem="MerchantDto"
                                Field="@nameof(MerchantDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>

                                <DropdownItem Clicked="() => OpenEditMerchantModal(context)">
                                    @L["Edit"]
                                </DropdownItem>


                                <DropdownItem Clicked="() => DeleteMerchantAsync(context)">
                                    @L["Delete"]
                                </DropdownItem>

                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateMerchantModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewMerchant"]</ModalTitle>
                <CloseButton Clicked="CloseCreateMerchantModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewMerchant" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Blazorise.Field>
                            <FieldLabel>@L["Business Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewMerchant.BusinessName">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Blazorise.Field>
                    </Validation>
                   
                    <Validation MessageLocalizer="@LH.Localize">
                        <Blazorise.Field>
                            <FieldLabel>@L["Email"]</FieldLabel>
                            <TextEdit @bind-Text="@NewMerchant.Email">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Blazorise.Field>
                    </Validation>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateMerchantModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateMerchantAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditMerchantModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                        <ModalTitle>@EditingMerchant.BusinessName</ModalTitle>
                        <CloseButton Clicked="CloseEditMerchantModal" />
                    </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingMerchant" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Blazorise.Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingMerchant.BusinessName">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Blazorise.Field>
                    </Validation>
                  
                    <Validation>
                        <Blazorise.Field>
                            <FieldLabel>@L["Email"]</FieldLabel>
                            <MemoEdit @bind-Text="@EditingMerchant.Email">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </MemoEdit>
                        </Blazorise.Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditMerchantModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateMerchantAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
