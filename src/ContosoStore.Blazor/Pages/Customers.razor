@page "/customers"
@using Volo.Abp.Application.Dtos
@using ContosoStore.Customers
@using ContosoStore.Merchants
@using ContosoStore.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp
@using Volo.Abp.AspNetCore.Components.Web
@inherits ContosoStoreComponentBase
@inject ICustomerAppService CustomerAppService
@inject IMerchantAppService MerchantAppService
@inject AbpBlazorMessageLocalizerHelper<ContosoStoreResource> LH


<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Customers"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                    
                        <Button Color="Color.Primary"
                                Clicked="OpenCreateCustomerModal">
                            @L["NewCustomer"]
                        </Button>
                    
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="CustomerDto"
                  Data="CustomerList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
              
                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.Name)"
                                Caption="@L["Name"]">
                </DataGridColumn>

                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.Email)"
                                Caption="@L["Email"]">
                </DataGridColumn>

                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.MerchantName)"
                                Caption="@L["Merchant"]">
                </DataGridColumn>

                <DataGridColumn Width="150px"
                                TItem="CustomerDto"
                                Field="@nameof(CustomerDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>

                                <DropdownItem Clicked="() => OpenEditCustomerModal(context)">
                                    @L["Edit"]
                                </DropdownItem>


                                <DropdownItem Clicked="() => DeleteCustomerAsync(context)">
                                    @L["Delete"]
                                </DropdownItem>

                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateCustomerModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewCustomer"]</ModalTitle>
                <CloseButton Clicked="CloseCreateCustomerModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewCustomer" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Blazorise.Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Blazorise.Field>
                    </Validation>
                   
                    <Validation MessageLocalizer="@LH.Localize">
                        <Blazorise.Field>
                            <FieldLabel>@L["Email"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCustomer.Email">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Blazorise.Field>
                    </Validation>

                    <Blazorise.Field>
                        <FieldLabel>@L["Merchant"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewCustomer.MerchantId">
                            @foreach (var merchant in merchantList)
                            {
                                <SelectItem TValue="Guid" Value="@merchant.Id">
                                    @merchant.BusinessName
                                </SelectItem>
                            }
                        </Select>
                    </Blazorise.Field>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateCustomerModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateCustomerAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditCustomerModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                        <ModalTitle>@EditingCustomer.Name</ModalTitle>
                        <CloseButton Clicked="CloseEditCustomerModal" />
                    </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingCustomer" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Blazorise.Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingCustomer.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Blazorise.Field>
                    </Validation>
                  
                    <Validation>
                        <Blazorise.Field>
                            <FieldLabel>@L["Email"]</FieldLabel>
                            <MemoEdit @bind-Text="@EditingCustomer.Email">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </MemoEdit>
                        </Blazorise.Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditCustomerModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateCustomerAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code {
    private IReadOnlyList<MerchantDto> merchantList = Array.Empty<MerchantDto>();

    protected override async Task OnInitializedAsync()
    {
        var result = await MerchantAppService.GetListAsync(new GetMerchantListDto());
        merchantList = result.Items.ToList();
    }
}



